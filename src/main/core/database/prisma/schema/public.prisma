model users {
  user_id             String                @id @db.Uuid
  user_name           String?               @db.VarChar
  user_email          String?               @db.VarChar
  user_created_at     DateTime?             @db.Timestamp(6)
  user_updated_at     DateTime?             @db.Timestamp(6)
  users               auth_users            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users_projects_link users_projects_link[]

  @@map("users")
  @@schema("public")
}

model projects {
  project_id          String                @id @db.Uuid
  project_name        String
  project_desc        String?
  project_created_by  String?
  project_modified_by String?
  project_start_date  DateTime?
  project_end_date    DateTime?
  issues              issues[]
  users_projects_link users_projects_link[]

  @@schema("public")
}

model users_projects_link {
  user_project_link_id String   @id @db.Uuid
  user_id              String   @db.Uuid
  project_id           String   @db.Uuid
  project              projects @relation(fields: [project_id], references: [project_id])
  user                 users    @relation(fields: [user_id], references: [user_id])

  @@index([user_id], name: "idx_user_id")
  @@index([project_id], name: "idx_project_id")
  @@schema("public")
}

model issues {
  issue_id          String    @id @db.Uuid
  project_id        String    @db.Uuid
  issue_title       String
  issue_key         String
  issue_desc        String?
  issue_created_by  String?
  issue_modified_by String?
  issue_created_at  DateTime? @default(now())
  issue_updated_at  DateTime? @updatedAt
  project           projects  @relation(fields: [project_id], references: [project_id])

  @@index([project_id], name: "idx_issues_project_id")
  @@schema("public")
}
